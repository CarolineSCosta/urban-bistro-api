{
  "swagger": "2.0",
  "info": {
    "description": "API developed for internal use of restaurants",
    "version": "2.0.0",
    "title": "Urban Bistro API",
    "contact": {
      "url": "https://github.com/CarolineSCosta"
    }
  },
  "host": "urban-bistro.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users"
    },
    {
      "name": "Products",
      "description": "Operations about products"
    },
    {
      "name": "Orders",
      "description": "Operations about orders"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List of all users",
        "description": "Lists all registered users",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UsersReturn"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "Creating a new user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Lists user data corresponding to the given ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UsersReturn"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates user data",
        "description": "Update user data corresponding to the given ID \n Data that can be changed:\n - Name \n - Password \n - Role",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updates",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete user corresponding to the given ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "description": "List of all products",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductsReturn"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create product",
        "description": "Creating a new product some object values can be sent as `null` \n These values are: \n - Type, \n - Flavor, \n - Complement,\n - Image",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get produt by ID",
        "description": "Lists products data corresponding to the given ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductsReturn"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Updates product data",
        "description": "Update product data corresponding to the given ID\n Data that can be changed: \n - Price \n - Image.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updates",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product",
        "description": "Delete product corresponding to the given ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all orders",
        "description": "List of all orders",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrdersReturn"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create order",
        "description": "Create a new order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ordem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order by ID",
        "description": "Lists orders data corresponding to the given ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrdersReturn"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Updates order data",
        "description": "Update order data corresponding to the given ID\n Data that can be changed:\n - Status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updates",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrdersUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete order",
        "description": "Delete product corresponding to the given ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "restaurant": {
          "type": "string"
        }
      }
    },
    "UsersReturn": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "restaurant": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time-zone"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time-zone"
        }
      }
    },
    "UsersUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "Products": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "flavor": {
          "type": "string"
        },
        "complement": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "menuType": {
          "type": "string"
        },
        "menuSubType": {
          "type": "string"
        }
      }
    },
    "ProductsReturn": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "flavor": {
          "type": "string"
        },
        "complement": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "menuType": {
          "type": "string"
        },
        "menuSubType": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time-zone"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time-zone"
        }
      }
    },
    "ProductsUpdate": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "float"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "Orders": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "client": {
          "type": "string"
        },
        "table": {
          "type": "number",
          "format": "int64"
        },
        "comments": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemsPO"
          }
        }
      }
    },
    "OrdersReturn": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "client": {
          "type": "string"
        },
        "table": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time-zone"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time-zone"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductsPO"
          }
        }
      }
    },
    "OrdersUpdate": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "ItemsPO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "qtd": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProductsPO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "float"
        },
        "flavor": {
          "type": "string"
        },
        "complement": {
          "type": "string"
        },
        "qtd": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    }
  }
}